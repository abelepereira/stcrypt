//================================================================================================================================================
// FILE: qt_fun2runnable.h
// (c) GIE 2011-02-09  07:34
//
//================================================================================================================================================
#ifndef H_GUARD_QT_FUN2RUNNABLE_2011_02_09_07_34
#define H_GUARD_QT_FUN2RUNNABLE_2011_02_09_07_34
//================================================================================================================================================
#pragma once
//================================================================================================================================================
#include <memory>

#include <QRunnable>
//================================================================================================================================================
namespace gie {


	template <class T>
	struct fun_to_runnable_wrap_t : QRunnable
	{
		fun_to_runnable_wrap_t(T&& fun):m_fun( std::move(fun) ){}

		virtual void run (){
			m_fun();
		}
		
	private:
		T m_fun;
	};

	template <class T>
	std::unique_ptr<QRunnable> wrap_to_runnable(T&& fun){
		return std::unique_ptr<QRunnable>( new fun_to_runnable_wrap_t<T>( std::move(fun) ) );
	}

}
//================================================================================================================================================
#endif
//================================================================================================================================================
