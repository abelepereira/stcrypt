//================================================================================================================================================
// FILE: util-str-conv.h
// (c) GIE 2010-09-23  20:34
//
//================================================================================================================================================
#ifndef H_GUARD_UTIL_STR_CONV_2010_09_23_20_34
#define H_GUARD_UTIL_STR_CONV_2010_09_23_20_34
//================================================================================================================================================
#pragma once
//================================================================================================================================================
#include <vector>
#include <cassert>
//================================================================================================================================================
namespace stcrypt {

	template <class T1>
	void conv_str( char const * const in_str,  std::vector<wchar_t, T1>& out_str ){

		if(!in_str || in_str[0]==0){
			out_str.resize(1);
			out_str[0] = 0;

			return;
		}

		out_str.resize( 1024 );

		size_t chars_converted = 0;
		for(;;){
			auto const r = mbstowcs_s(&chars_converted, out_str.data(), out_str.size(), in_str, out_str.size()-1);
			if(!r) break;
			if( r == ERANGE ) {
				out_str.resize( out_str.size() * 2 );
				continue;
			}

			assert(false);
		} 

		out_str.resize( chars_converted );
		assert(  out_str.at(chars_converted-1)==0 );

	}

}
//================================================================================================================================================
#endif
//================================================================================================================================================
