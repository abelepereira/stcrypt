//================================================================================================================================================
// FILE: util-cng-obj-ref.h
// (c) GIE 2010-08-12  17:56
//
//================================================================================================================================================
#ifndef H_GUARD_UTIL_CNG_OBJ_REF_2010_08_12_17_56
#define H_GUARD_UTIL_CNG_OBJ_REF_2010_08_12_17_56
//================================================================================================================================================
#pragma once
//================================================================================================================================================
#include "util-atomic-counter.hpp"

#include <boost/noncopyable.hpp>
//================================================================================================================================================
namespace stcrypt {

	struct cng_obj_ref
		: atomic_counter_impl_t
		, boost::noncopyable
	{
		refcnt add_ref() { return ccom_internal_inc_ref_(); }		
		refcnt dec_ref() { return ccom_internal_dec_ref_(); }

		virtual void destroy_self()=0;
		virtual ~cng_obj_ref() {}
	};


	inline void intrusive_ptr_add_ref(cng_obj_ref * const p)
	{
		p->add_ref();
	}
	inline void intrusive_ptr_release(cng_obj_ref * const p)throw()
	{
		if( p->dec_ref() ==0 ) {
			p->destroy_self();
		}
	}

}
//================================================================================================================================================
#endif
//================================================================================================================================================
