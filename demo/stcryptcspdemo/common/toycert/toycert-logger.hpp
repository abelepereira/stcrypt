//================================================================================================================================================
// FILE: toycert-logger.h
// (c) GIE 2010-04-01  13:37
//
//================================================================================================================================================
#ifndef H_GUARD_TOYCERT_LOGGER_2010_04_01_13_37
#define H_GUARD_TOYCERT_LOGGER_2010_04_01_13_37
//================================================================================================================================================
#pragma once
//================================================================================================================================================
#include "boost/function.hpp"
#include "boost/format.hpp"
//================================================================================================================================================
namespace stcrypt { namespace ca {

	typedef boost::function<void(std::string const&)> log_message_callback_t;

	struct logger_t {
		logger_t (std::string const& prefix, log_message_callback_t const& log_func)
			: m_log_func( log_func )
			, m_prefix(prefix)
		{}

		template <class T1>
		void log_message(T1 const& msg){
			if( m_log_func ) {
				m_log_func( (boost::format("[%1%][%2%]") % m_prefix % msg).str()) ;
			}
		}

		template <class T1, class T2>
		void log_message(T1 const& msg1, T2 const& msg2){
			if( m_log_func ) {
				m_log_func( (boost::format("[%1%][%2%][%3%]") % m_prefix % msg1 % msg2).str()) ;
			}
		}


	private:
		log_message_callback_t m_log_func;
		std::string			   m_prefix;
	};

} }
//================================================================================================================================================
#endif
//================================================================================================================================================
